evaluationDependsOn(":application")

apply plugin: "java"

dependencies {
    def androidModule = project(":application")

    testCompile project(path: ":application", configuration: "debugCompile")

    def debugVariant = androidModule.android.applicationVariants.find({ it.name == "debug" })
    testCompile debugVariant.javaCompile.classpath
    testCompile debugVariant.javaCompile.outputs.files
    testCompile files(androidModule.android.getBootClasspath())

    // Robolectric
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-core:1.1"
    testCompile "org.hamcrest:hamcrest-library:1.1"
    testCompile "org.hamcrest:hamcrest-integration:1.1"

    // TODO: requires special build of robolectric right now. working on this...
    testCompile("org.robolectric:robolectric:2.4") {
        exclude module: "classworlds"
        exclude module: "commons-logging"
        exclude module: "httpclient"
        exclude module: "maven-artifact"
        exclude module: "maven-artifact-manager"
        exclude module: "maven-error-diagnostics"
        exclude module: "maven-model"
        exclude module: "maven-project"
        exclude module: "maven-settings"
        exclude module: "plexus-container-default"
        exclude module: "plexus-interpolation"
        exclude module: "plexus-utils"
        exclude module: "wagon-file"
        exclude module: "wagon-http-lightweight"
        exclude module: "wagon-provider-api"
    }

}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
}
